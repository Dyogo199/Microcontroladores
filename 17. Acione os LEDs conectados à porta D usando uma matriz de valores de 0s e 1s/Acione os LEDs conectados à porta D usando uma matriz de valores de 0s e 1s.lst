;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29/05/2023 09:45:56
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF16  	GOTO        44
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x001C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x001E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0022	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0024	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0026	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0028	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x002A	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x002C	0xF000ECB4  	CALL        360, 0
;MyProject.c,11 :: 		void main()
;MyProject.c,13 :: 		TRISB = 0x00; // Define a porta B como saída
0x0030	0x6A93      	CLRF        TRISB 
;MyProject.c,14 :: 		TRISD = 0x00; // Define a porta D como saída
0x0032	0x6A95      	CLRF        TRISD 
;MyProject.c,19 :: 		while(1) // Loop infinito
L_main0:
;MyProject.c,22 :: 		for(coluna=0; coluna<2; coluna++) // Loop pelas colunas
0x0034	0x6A05      	CLRF        R5 
0x0036	0x6A06      	CLRF        R6 
L_main2:
0x0038	0x0E80      	MOVLW       128
0x003A	0x1806      	XORWF       R6, 0 
0x003C	0x6E00      	MOVWF       R0 
0x003E	0x0E80      	MOVLW       128
0x0040	0x5C00      	SUBWF       R0, 0 
0x0042	0xE102      	BNZ         L__main12
0x0044	0x0E02      	MOVLW       2
0x0046	0x5C05      	SUBWF       R5, 0 
L__main12:
0x0048	0xB0D8      	BTFSC       STATUS, 0 
0x004A	0xD07C      	BRA         L_main3
;MyProject.c,24 :: 		for(linha=0; linha<8; linha++) // Loop pelas linhas
0x004C	0x6A07      	CLRF        R7 
0x004E	0x6A08      	CLRF        R8 
L_main5:
0x0050	0x0E80      	MOVLW       128
0x0052	0x1808      	XORWF       R8, 0 
0x0054	0x6E00      	MOVWF       R0 
0x0056	0x0E80      	MOVLW       128
0x0058	0x5C00      	SUBWF       R0, 0 
0x005A	0xE102      	BNZ         L__main13
0x005C	0x0E08      	MOVLW       8
0x005E	0x5C07      	SUBWF       R7, 0 
L__main13:
0x0060	0xE26E      	BC          L_main6
;MyProject.c,26 :: 		if(coluna == 0) // Se a coluna é a primeira (porta B)
0x0062	0x0E00      	MOVLW       0
0x0064	0x1806      	XORWF       R6, 0 
0x0066	0xE102      	BNZ         L__main14
0x0068	0x0E00      	MOVLW       0
0x006A	0x1805      	XORWF       R5, 0 
L__main14:
0x006C	0xE12C      	BNZ         L_main8
;MyProject.c,27 :: 		LATB = matriz[linha][coluna] << linha; // Define o valor do LED conectado ao bit linha da porta B
0x006E	0xF000C007  	MOVFF       R7, R0
0x0072	0xF001C008  	MOVFF       R8, R1
0x0076	0x3600      	RLCF        R0, 1 
0x0078	0x9000      	BCF         R0, 0 
0x007A	0x3601      	RLCF        R1, 1 
0x007C	0x3600      	RLCF        R0, 1 
0x007E	0x9000      	BCF         R0, 0 
0x0080	0x3601      	RLCF        R1, 1 
0x0082	0x0E15      	MOVLW       _matriz
0x0084	0x2400      	ADDWF       R0, 0 
0x0086	0x6E03      	MOVWF       R3 
0x0088	0x0E00      	MOVLW       hi_addr(_matriz)
0x008A	0x2001      	ADDWFC      R1, 0 
0x008C	0x6E04      	MOVWF       R4 
0x008E	0xF000C005  	MOVFF       R5, R0
0x0092	0xF001C006  	MOVFF       R6, R1
0x0096	0x3600      	RLCF        R0, 1 
0x0098	0x9000      	BCF         R0, 0 
0x009A	0x3601      	RLCF        R1, 1 
0x009C	0x5000      	MOVF        R0, 0 
0x009E	0x2403      	ADDWF       R3, 0 
0x00A0	0x6EE9      	MOVWF       FSR0L 
0x00A2	0x5001      	MOVF        R1, 0 
0x00A4	0x2004      	ADDWFC      R4, 0 
0x00A6	0x6EEA      	MOVWF       FSR0L+1 
0x00A8	0xF002CFEE  	MOVFF       POSTINC0, R2
0x00AC	0xF001C007  	MOVFF       R7, R1
0x00B0	0xF000C002  	MOVFF       R2, R0
0x00B4	0x5001      	MOVF        R1, 0 
L__main15:
0x00B6	0xE004      	BZ          L__main16
0x00B8	0x3600      	RLCF        R0, 1 
0x00BA	0x9000      	BCF         R0, 0 
0x00BC	0x0FFF      	ADDLW       255
0x00BE	0xD7FB      	BRA         L__main15
L__main16:
0x00C0	0xFF8AC000  	MOVFF       R0, LATB
0x00C4	0xD02B      	BRA         L_main9
L_main8:
;MyProject.c,29 :: 		LATD = matriz[linha][coluna] << linha; // Define o valor do LED conectado ao bit linha da porta D
0x00C6	0xF000C007  	MOVFF       R7, R0
0x00CA	0xF001C008  	MOVFF       R8, R1
0x00CE	0x3600      	RLCF        R0, 1 
0x00D0	0x9000      	BCF         R0, 0 
0x00D2	0x3601      	RLCF        R1, 1 
0x00D4	0x3600      	RLCF        R0, 1 
0x00D6	0x9000      	BCF         R0, 0 
0x00D8	0x3601      	RLCF        R1, 1 
0x00DA	0x0E15      	MOVLW       _matriz
0x00DC	0x2400      	ADDWF       R0, 0 
0x00DE	0x6E03      	MOVWF       R3 
0x00E0	0x0E00      	MOVLW       hi_addr(_matriz)
0x00E2	0x2001      	ADDWFC      R1, 0 
0x00E4	0x6E04      	MOVWF       R4 
0x00E6	0xF000C005  	MOVFF       R5, R0
0x00EA	0xF001C006  	MOVFF       R6, R1
0x00EE	0x3600      	RLCF        R0, 1 
0x00F0	0x9000      	BCF         R0, 0 
0x00F2	0x3601      	RLCF        R1, 1 
0x00F4	0x5000      	MOVF        R0, 0 
0x00F6	0x2403      	ADDWF       R3, 0 
0x00F8	0x6EE9      	MOVWF       FSR0L 
0x00FA	0x5001      	MOVF        R1, 0 
0x00FC	0x2004      	ADDWFC      R4, 0 
0x00FE	0x6EEA      	MOVWF       FSR0L+1 
0x0100	0xF002CFEE  	MOVFF       POSTINC0, R2
0x0104	0xF001C007  	MOVFF       R7, R1
0x0108	0xF000C002  	MOVFF       R2, R0
0x010C	0x5001      	MOVF        R1, 0 
L__main17:
0x010E	0xE004      	BZ          L__main18
0x0110	0x3600      	RLCF        R0, 1 
0x0112	0x9000      	BCF         R0, 0 
0x0114	0x0FFF      	ADDLW       255
0x0116	0xD7FB      	BRA         L__main17
L__main18:
0x0118	0xFF8CC000  	MOVFF       R0, LATD
L_main9:
;MyProject.c,31 :: 		Delay_ms(500); // Aguarda 50ms
0x011C	0x0E06      	MOVLW       6
0x011E	0x6E0B      	MOVWF       R11, 0
0x0120	0x0E13      	MOVLW       19
0x0122	0x6E0C      	MOVWF       R12, 0
0x0124	0x0EAD      	MOVLW       173
0x0126	0x6E0D      	MOVWF       R13, 0
L_main10:
0x0128	0x2E0D      	DECFSZ      R13, 1, 0
0x012A	0xD7FE      	BRA         L_main10
0x012C	0x2E0C      	DECFSZ      R12, 1, 0
0x012E	0xD7FC      	BRA         L_main10
0x0130	0x2E0B      	DECFSZ      R11, 1, 0
0x0132	0xD7FA      	BRA         L_main10
0x0134	0x0000      	NOP
0x0136	0x0000      	NOP
;MyProject.c,24 :: 		for(linha=0; linha<8; linha++) // Loop pelas linhas
0x0138	0x4A07      	INFSNZ      R7, 1 
0x013A	0x2A08      	INCF        R8, 1 
;MyProject.c,32 :: 		}
0x013C	0xD789      	BRA         L_main5
L_main6:
;MyProject.c,22 :: 		for(coluna=0; coluna<2; coluna++) // Loop pelas colunas
0x013E	0x4A05      	INFSNZ      R5, 1 
0x0140	0x2A06      	INCF        R6, 1 
;MyProject.c,33 :: 		}
0x0142	0xD77A      	BRA         L_main2
L_main3:
;MyProject.c,34 :: 		}
0x0144	0xD777      	BRA         L_main0
;MyProject.c,35 :: 		}
L_end_main:
0x0146	0xD7FF      	BRA         $+0
; end of _main
0x0168	0xF015EE10  	LFSR        1, 21
0x016C	0x0E20      	MOVLW       32
0x016E	0x6E00      	MOVWF       R0 
0x0170	0x0E01      	MOVLW       1
0x0172	0x6E01      	MOVWF       R1 
0x0174	0x0E48      	MOVLW       72
0x0176	0x6EF6      	MOVWF       4086 
0x0178	0x0E01      	MOVLW       1
0x017A	0x6EF7      	MOVWF       TBLPTRH 
0x017C	0x0E00      	MOVLW       0
0x017E	0x6EF8      	MOVWF       TBLPTRU 
0x0180	0xF000EC0E  	CALL        28, 0
0x0184	0x0012      	RETURN      0
;MyProject.c,0 :: ?ICS_matriz
0x0148	0x0000 ;?ICS_matriz+0
0x014A	0x0001 ;?ICS_matriz+2
0x014C	0x0000 ;?ICS_matriz+4
0x014E	0x0001 ;?ICS_matriz+6
0x0150	0x0000 ;?ICS_matriz+8
0x0152	0x0001 ;?ICS_matriz+10
0x0154	0x0000 ;?ICS_matriz+12
0x0156	0x0001 ;?ICS_matriz+14
0x0158	0x0000 ;?ICS_matriz+16
0x015A	0x0001 ;?ICS_matriz+18
0x015C	0x0000 ;?ICS_matriz+20
0x015E	0x0001 ;?ICS_matriz+22
0x0160	0x0000 ;?ICS_matriz+24
0x0162	0x0001 ;?ICS_matriz+26
0x0164	0x0000 ;?ICS_matriz+28
0x0166	0x0001 ;?ICS_matriz+30
; end of ?ICS_matriz
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [16]    ___CC2DW
0x002C     [284]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [2]    main_coluna_L1
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [2]    main_linha_L1
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [32]    _matriz
0x0F8A       [1]    LATB
0x0F8C       [1]    LATD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0148      [32]    ?ICS_matriz
